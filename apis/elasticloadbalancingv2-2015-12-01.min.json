{
  "version": "2.0",
  "metadata": {
    "apiVersion": "2015-12-01",
    "endpointPrefix": "elasticloadbalancing",
    "protocol": "query",
    "serviceAbbreviation": "Elastic Load Balancing v2",
    "serviceFullName": "Elastic Load Balancing",
    "serviceId": "Elastic Load Balancing v2",
    "signatureVersion": "v4",
    "uid": "elasticloadbalancingv2-2015-12-01",
    "xmlNamespace": "http://elasticloadbalancing.amazonaws.com/doc/2015-12-01/"
  },
  "operations": {
    "AddListenerCertificates": {
      "input": {
        "type": "structure",
        "required": [
          "ListenerArn",
          "Certificates"
        ],
        "members": {
          "ListenerArn": {},
          "Certificates": {
            "shape": "S3"
          }
        }
      },
      "output": {
        "resultWrapper": "AddListenerCertificatesResult",
        "type": "structure",
        "members": {
          "Certificates": {
            "shape": "S3"
          }
        }
      }
    },
    "AddTags": {
      "input": {
        "type": "structure",
        "required": [
          "ResourceArns",
          "Tags"
        ],
        "members": {
          "ResourceArns": {
            "shape": "S9"
          },
          "Tags": {
            "shape": "Sb"
          }
        }
      },
      "output": {
        "resultWrapper": "AddTagsResult",
        "type": "structure",
        "members": {}
      }
    },
    "CreateListener": {
      "input": {
        "type": "structure",
        "required": [
          "LoadBalancerArn",
          "Protocol",
          "Port",
          "DefaultActions"
        ],
        "members": {
          "LoadBalancerArn": {},
          "Protocol": {
            "shape": "Si"
          },
          "Port": {
            "shape": "Sj"
          },
          "SslPolicy": {},
          "Certificates": {
            "shape": "S3"
          },
          "DefaultActions": {
            "shape": "Sl"
          }
        }
      },
      "output": {
        "resultWrapper": "CreateListenerResult",
        "type": "structure",
        "members": {
          "Listeners": {
            "shape": "S1r"
          }
        }
      }
    },
    "CreateLoadBalancer": {
      "input": {
        "type": "structure",
        "required": [
          "Name"
        ],
        "members": {
          "Name": {},
          "Subnets": {
            "shape": "S1v"
          },
          "SubnetMappings": {
            "shape": "S1x"
          },
          "SecurityGroups": {
            "shape": "S20"
          },
          "Scheme": {
            "shape": "S22"
          },
          "Tags": {
            "shape": "Sb"
          },
          "Type": {
            "shape": "S23"
          },
          "IpAddressType": {
            "shape": "S24"
          }
        }
      },
      "output": {
        "resultWrapper": "CreateLoadBalancerResult",
        "type": "structure",
        "members": {
          "LoadBalancers": {
            "shape": "S26"
          }
        }
      }
    },
    "CreateRule": {
      "input": {
        "type": "structure",
        "required": [
          "ListenerArn",
          "Conditions",
          "Priority",
          "Actions"
        ],
        "members": {
          "ListenerArn": {},
          "Conditions": {
            "shape": "S2m"
          },
          "Priority": {
            "shape": "S2r"
          },
          "Actions": {
            "shape": "Sl"
          }
        }
      },
      "output": {
        "resultWrapper": "CreateRuleResult",
        "type": "structure",
        "members": {
          "Rules": {
            "shape": "S2t"
          }
        }
      }
    },
    "CreateTargetGroup": {
      "input": {
        "type": "structure",
        "required": [
          "Name",
          "Protocol",
          "Port",
          "VpcId"
        ],
        "members": {
          "Name": {},
          "Protocol": {
            "shape": "Si"
          },
          "Port": {
            "shape": "Sj"
          },
          "VpcId": {},
          "HealthCheckProtocol": {
            "shape": "Si"
          },
          "HealthCheckPort": {},
          "HealthCheckPath": {
            "shape": "S31"
          },
          "HealthCheckIntervalSeconds": {
            "shape": "S32"
          },
          "HealthCheckTimeoutSeconds": {
            "shape": "S33"
          },
          "HealthyThresholdCount": {
            "shape": "S34"
          },
          "UnhealthyThresholdCount": {
            "shape": "S34"
          },
          "Matcher": {
            "shape": "S35"
          },
          "TargetType": {
            "shape": "S37"
          }
        }
      },
      "output": {
        "resultWrapper": "CreateTargetGroupResult",
        "type": "structure",
        "members": {
          "TargetGroups": {
            "shape": "S39"
          }
        }
      }
    },
    "DeleteListener": {
      "input": {
        "type": "structure",
        "required": [
          "ListenerArn"
        ],
        "members": {
          "ListenerArn": {}
        }
      },
      "output": {
        "resultWrapper": "DeleteListenerResult",
        "type": "structure",
        "members": {}
      }
    },
    "DeleteLoadBalancer": {
      "input": {
        "type": "structure",
        "required": [
          "LoadBalancerArn"
        ],
        "members": {
          "LoadBalancerArn": {}
        }
      },
      "output": {
        "resultWrapper": "DeleteLoadBalancerResult",
        "type": "structure",
        "members": {}
      }
    },
    "DeleteRule": {
      "input": {
        "type": "structure",
        "required": [
          "RuleArn"
        ],
        "members": {
          "RuleArn": {}
        }
      },
      "output": {
        "resultWrapper": "DeleteRuleResult",
        "type": "structure",
        "members": {}
      }
    },
    "DeleteTargetGroup": {
      "input": {
        "type": "structure",
        "required": [
          "TargetGroupArn"
        ],
        "members": {
          "TargetGroupArn": {}
        }
      },
      "output": {
        "resultWrapper": "DeleteTargetGroupResult",
        "type": "structure",
        "members": {}
      }
    },
    "DeregisterTargets": {
      "input": {
        "type": "structure",
        "required": [
          "TargetGroupArn",
          "Targets"
        ],
        "members": {
          "TargetGroupArn": {},
          "Targets": {
            "shape": "S3l"
          }
        }
      },
      "output": {
        "resultWrapper": "DeregisterTargetsResult",
        "type": "structure",
        "members": {}
      }
    },
    "DescribeAccountLimits": {
      "input": {
        "type": "structure",
        "members": {
          "Marker": {},
          "PageSize": {
            "shape": "S3r"
          }
        }
      },
      "output": {
        "resultWrapper": "DescribeAccountLimitsResult",
        "type": "structure",
        "members": {
          "Limits": {
            "type": "list",
            "member": {
              "type": "structure",
              "members": {
                "Name": {},
                "Max": {}
              }
            }
          },
          "NextMarker": {}
        }
      }
    },
    "DescribeListenerCertificates": {
      "input": {
        "type": "structure",
        "required": [
          "ListenerArn"
        ],
        "members": {
          "ListenerArn": {},
          "Marker": {},
          "PageSize": {
            "shape": "S3r"
          }
        }
      },
      "output": {
        "resultWrapper": "DescribeListenerCertificatesResult",
        "type": "structure",
        "members": {
          "Certificates": {
            "shape": "S3"
          },
          "NextMarker": {}
        }
      }
    },
    "DescribeListeners": {
      "input": {
        "type": "structure",
        "members": {
          "LoadBalancerArn": {},
          "ListenerArns": {
            "type": "list",
            "member": {}
          },
          "Marker": {},
          "PageSize": {
            "shape": "S3r"
          }
        }
      },
      "output": {
        "resultWrapper": "DescribeListenersResult",
        "type": "structure",
        "members": {
          "Listeners": {
            "shape": "S1r"
          },
          "NextMarker": {}
        }
      }
    },
    "DescribeLoadBalancerAttributes": {
      "input": {
        "type": "structure",
        "required": [
          "LoadBalancerArn"
        ],
        "members": {
          "LoadBalancerArn": {}
        }
      },
      "output": {
        "resultWrapper": "DescribeLoadBalancerAttributesResult",
        "type": "structure",
        "members": {
          "Attributes": {
            "shape": "S44"
          }
        }
      }
    },
    "DescribeLoadBalancers": {
      "input": {
        "type": "structure",
        "members": {
          "LoadBalancerArns": {
            "shape": "S3b"
          },
          "Names": {
            "type": "list",
            "member": {}
          },
          "Marker": {},
          "PageSize": {
            "shape": "S3r"
          }
        }
      },
      "output": {
        "resultWrapper": "DescribeLoadBalancersResult",
        "type": "structure",
        "members": {
          "LoadBalancers": {
            "shape": "S26"
          },
          "NextMarker": {}
        }
      }
    },
    "DescribeRules": {
      "input": {
        "type": "structure",
        "members": {
          "ListenerArn": {},
          "RuleArns": {
            "type": "list",
            "member": {}
          },
          "Marker": {},
          "PageSize": {
            "shape": "S3r"
          }
        }
      },
      "output": {
        "resultWrapper": "DescribeRulesResult",
        "type": "structure",
        "members": {
          "Rules": {
            "shape": "S2t"
          },
          "NextMarker": {}
        }
      }
    },
    "DescribeSSLPolicies": {
      "input": {
        "type": "structure",
        "members": {
          "Names": {
            "type": "list",
            "member": {}
          },
          "Marker": {},
          "PageSize": {
            "shape": "S3r"
          }
        }
      },
      "output": {
        "resultWrapper": "DescribeSSLPoliciesResult",
        "type": "structure",
        "members": {
          "SslPolicies": {
            "type": "list",
            "member": {
              "type": "structure",
              "members": {
                "SslProtocols": {
                  "type": "list",
                  "member": {}
                },
                "Ciphers": {
                  "type": "list",
                  "member": {
                    "type": "structure",
                    "members": {
                      "Name": {},
                      "Priority": {
                        "type": "integer"
                      }
                    }
                  }
                },
                "Name": {}
              }
            }
          },
          "NextMarker": {}
        }
      }
    },
    "DescribeTags": {
      "input": {
        "type": "structure",
        "required": [
          "ResourceArns"
        ],
        "members": {
          "ResourceArns": {
            "shape": "S9"
          }
        }
      },
      "output": {
        "resultWrapper": "DescribeTagsResult",
        "type": "structure",
        "members": {
          "TagDescriptions": {
            "type": "list",
            "member": {
              "type": "structure",
              "members": {
                "ResourceArn": {},
                "Tags": {
                  "shape": "Sb"
                }
              }
            }
          }
        }
      }
    },
    "DescribeTargetGroupAttributes": {
      "input": {
        "type": "structure",
        "required": [
          "TargetGroupArn"
        ],
        "members": {
          "TargetGroupArn": {}
        }
      },
      "output": {
        "resultWrapper": "DescribeTargetGroupAttributesResult",
        "type": "structure",
        "members": {
          "Attributes": {
            "shape": "S4v"
          }
        }
      }
    },
    "DescribeTargetGroups": {
      "input": {
        "type": "structure",
        "members": {
          "LoadBalancerArn": {},
          "TargetGroupArns": {
            "type": "list",
            "member": {}
          },
          "Names": {
            "type": "list",
            "member": {}
          },
          "Marker": {},
          "PageSize": {
            "shape": "S3r"
          }
        }
      },
      "output": {
        "resultWrapper": "DescribeTargetGroupsResult",
        "type": "structure",
        "members": {
          "TargetGroups": {
            "shape": "S39"
          },
          "NextMarker": {}
        }
      }
    },
    "DescribeTargetHealth": {
      "input": {
        "type": "structure",
        "required": [
          "TargetGroupArn"
        ],
        "members": {
          "TargetGroupArn": {},
          "Targets": {
            "shape": "S3l"
          }
        }
      },
      "output": {
        "resultWrapper": "DescribeTargetHealthResult",
        "type": "structure",
        "members": {
          "TargetHealthDescriptions": {
            "type": "list",
            "member": {
              "type": "structure",
              "members": {
                "Target": {
                  "shape": "S3m"
                },
                "HealthCheckPort": {},
                "TargetHealth": {
                  "type": "structure",
                  "members": {
                    "State": {
                      "type": "string",
                      "enum": [
                        "initial",
                        "healthy",
                        "unhealthy",
                        "unused",
                        "draining",
                        "unavailable"
                      ]
                    },
                    "Reason": {
                      "type": "string",
                      "enum": [
                        "Elb.RegistrationInProgress",
                        "Elb.InitialHealthChecking",
                        "Target.ResponseCodeMismatch",
                        "Target.Timeout",
                        "Target.FailedHealthChecks",
                        "Target.NotRegistered",
                        "Target.NotInUse",
                        "Target.DeregistrationInProgress",
                        "Target.InvalidState",
                        "Target.IpUnusable",
                        "Elb.InternalError"
                      ]
                    },
                    "Description": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "ModifyListener": {
      "input": {
        "type": "structure",
        "required": [
          "ListenerArn"
        ],
        "members": {
          "ListenerArn": {},
          "Port": {
            "shape": "Sj"
          },
          "Protocol": {
            "shape": "Si"
          },
          "SslPolicy": {},
          "Certificates": {
            "shape": "S3"
          },
          "DefaultActions": {
            "shape": "Sl"
          }
        }
      },
      "output": {
        "resultWrapper": "ModifyListenerResult",
        "type": "structure",
        "members": {
          "Listeners": {
            "shape": "S1r"
          }
        }
      }
    },
    "ModifyLoadBalancerAttributes": {
      "input": {
        "type": "structure",
        "required": [
          "LoadBalancerArn",
          "Attributes"
        ],
        "members": {
          "LoadBalancerArn": {},
          "Attributes": {
            "shape": "S44"
          }
        }
      },
      "output": {
        "resultWrapper": "ModifyLoadBalancerAttributesResult",
        "type": "structure",
        "members": {
          "Attributes": {
            "shape": "S44"
          }
        }
      }
    },
    "ModifyRule": {
      "input": {
        "type": "structure",
        "required": [
          "RuleArn"
        ],
        "members": {
          "RuleArn": {},
          "Conditions": {
            "shape": "S2m"
          },
          "Actions": {
            "shape": "Sl"
          }
        }
      },
      "output": {
        "resultWrapper": "ModifyRuleResult",
        "type": "structure",
        "members": {
          "Rules": {
            "shape": "S2t"
          }
        }
      }
    },
    "ModifyTargetGroup": {
      "input": {
        "type": "structure",
        "required": [
          "TargetGroupArn"
        ],
        "members": {
          "TargetGroupArn": {},
          "HealthCheckProtocol": {
            "shape": "Si"
          },
          "HealthCheckPort": {},
          "HealthCheckPath": {
            "shape": "S31"
          },
          "HealthCheckIntervalSeconds": {
            "shape": "S32"
          },
          "HealthCheckTimeoutSeconds": {
            "shape": "S33"
          },
          "HealthyThresholdCount": {
            "shape": "S34"
          },
          "UnhealthyThresholdCount": {
            "shape": "S34"
          },
          "Matcher": {
            "shape": "S35"
          }
        }
      },
      "output": {
        "resultWrapper": "ModifyTargetGroupResult",
        "type": "structure",
        "members": {
          "TargetGroups": {
            "shape": "S39"
          }
        }
      }
    },
    "ModifyTargetGroupAttributes": {
      "input": {
        "type": "structure",
        "required": [
          "TargetGroupArn",
          "Attributes"
        ],
        "members": {
          "TargetGroupArn": {},
          "Attributes": {
            "shape": "S4v"
          }
        }
      },
      "output": {
        "resultWrapper": "ModifyTargetGroupAttributesResult",
        "type": "structure",
        "members": {
          "Attributes": {
            "shape": "S4v"
          }
        }
      }
    },
    "RegisterTargets": {
      "input": {
        "type": "structure",
        "required": [
          "TargetGroupArn",
          "Targets"
        ],
        "members": {
          "TargetGroupArn": {},
          "Targets": {
            "shape": "S3l"
          }
        }
      },
      "output": {
        "resultWrapper": "RegisterTargetsResult",
        "type": "structure",
        "members": {}
      }
    },
    "RemoveListenerCertificates": {
      "input": {
        "type": "structure",
        "required": [
          "ListenerArn",
          "Certificates"
        ],
        "members": {
          "ListenerArn": {},
          "Certificates": {
            "shape": "S3"
          }
        }
      },
      "output": {
        "resultWrapper": "RemoveListenerCertificatesResult",
        "type": "structure",
        "members": {}
      }
    },
    "RemoveTags": {
      "input": {
        "type": "structure",
        "required": [
          "ResourceArns",
          "TagKeys"
        ],
        "members": {
          "ResourceArns": {
            "shape": "S9"
          },
          "TagKeys": {
            "type": "list",
            "member": {
              "shape": "Sd"
            }
          }
        }
      },
      "output": {
        "resultWrapper": "RemoveTagsResult",
        "type": "structure",
        "members": {}
      }
    },
    "SetIpAddressType": {
      "input": {
        "type": "structure",
        "required": [
          "LoadBalancerArn",
          "IpAddressType"
        ],
        "members": {
          "LoadBalancerArn": {},
          "IpAddressType": {
            "shape": "S24"
          }
        }
      },
      "output": {
        "resultWrapper": "SetIpAddressTypeResult",
        "type": "structure",
        "members": {
          "IpAddressType": {
            "shape": "S24"
          }
        }
      }
    },
    "SetRulePriorities": {
      "input": {
        "type": "structure",
        "required": [
          "RulePriorities"
        ],
        "members": {
          "RulePriorities": {
            "type": "list",
            "member": {
              "type": "structure",
              "members": {
                "RuleArn": {},
                "Priority": {
                  "shape": "S2r"
                }
              }
            }
          }
        }
      },
      "output": {
        "resultWrapper": "SetRulePrioritiesResult",
        "type": "structure",
        "members": {
          "Rules": {
            "shape": "S2t"
          }
        }
      }
    },
    "SetSecurityGroups": {
      "input": {
        "type": "structure",
        "required": [
          "LoadBalancerArn",
          "SecurityGroups"
        ],
        "members": {
          "LoadBalancerArn": {},
          "SecurityGroups": {
            "shape": "S20"
          }
        }
      },
      "output": {
        "resultWrapper": "SetSecurityGroupsResult",
        "type": "structure",
        "members": {
          "SecurityGroupIds": {
            "shape": "S20"
          }
        }
      }
    },
    "SetSubnets": {
      "input": {
        "type": "structure",
        "required": [
          "LoadBalancerArn"
        ],
        "members": {
          "LoadBalancerArn": {},
          "Subnets": {
            "shape": "S1v"
          },
          "SubnetMappings": {
            "shape": "S1x"
          }
        }
      },
      "output": {
        "resultWrapper": "SetSubnetsResult",
        "type": "structure",
        "members": {
          "AvailabilityZones": {
            "shape": "S2f"
          }
        }
      }
    }
  },
  "shapes": {
    "S3": {
      "type": "list",
      "member": {
        "type": "structure",
        "members": {
          "CertificateArn": {},
          "IsDefault": {
            "type": "boolean"
          }
        }
      }
    },
    "S9": {
      "type": "list",
      "member": {}
    },
    "Sb": {
      "type": "list",
      "member": {
        "type": "structure",
        "required": [
          "Key"
        ],
        "members": {
          "Key": {
            "shape": "Sd"
          },
          "Value": {
            "type": "string",
            "max": 256,
            "min": 0,
            "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
          }
        }
      },
      "min": 1
    },
    "Sd": {
      "type": "string",
      "max": 128,
      "min": 1,
      "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
    },
    "Si": {
      "type": "string",
      "enum": [
        "HTTP",
        "HTTPS",
        "TCP"
      ]
    },
    "Sj": {
      "type": "integer",
      "max": 65535,
      "min": 1
    },
    "Sl": {
      "type": "list",
      "member": {
        "type": "structure",
        "required": [
          "Type"
        ],
        "members": {
          "Type": {
            "type": "string",
            "enum": [
              "forward",
              "authenticate-oidc",
              "authenticate-cognito",
              "redirect",
              "fixed-response"
            ]
          },
          "TargetGroupArn": {},
          "AuthenticateOidcConfig": {
            "type": "structure",
            "required": [
              "Issuer",
              "AuthorizationEndpoint",
              "TokenEndpoint",
              "UserInfoEndpoint",
              "ClientId",
              "ClientSecret"
            ],
            "members": {
              "Issuer": {},
              "AuthorizationEndpoint": {},
              "TokenEndpoint": {},
              "UserInfoEndpoint": {},
              "ClientId": {},
              "ClientSecret": {},
              "SessionCookieName": {},
              "Scope": {},
              "SessionTimeout": {
                "type": "long"
              },
              "AuthenticationRequestExtraParams": {
                "type": "map",
                "key": {},
                "value": {}
              },
              "OnUnauthenticatedRequest": {
                "type": "string",
                "enum": [
                  "deny",
                  "allow",
                  "authenticate"
                ]
              }
            }
          },
          "AuthenticateCognitoConfig": {
            "type": "structure",
            "required": [
              "UserPoolArn",
              "UserPoolClientId",
              "UserPoolDomain"
            ],
            "members": {
              "UserPoolArn": {},
              "UserPoolClientId": {},
              "UserPoolDomain": {},
              "SessionCookieName": {},
              "Scope": {},
              "SessionTimeout": {
                "type": "long"
              },
              "AuthenticationRequestExtraParams": {
                "type": "map",
                "key": {},
                "value": {}
              },
              "OnUnauthenticatedRequest": {
                "type": "string",
                "enum": [
                  "deny",
                  "allow",
                  "authenticate"
                ]
              }
            }
          },
          "Order": {
            "type": "integer",
            "max": 50000,
            "min": 1
          },
          "RedirectConfig": {
            "type": "structure",
            "required": [
              "StatusCode"
            ],
            "members": {
              "Protocol": {
                "type": "string",
                "pattern": "^(HTTPS?|#\\{protocol\\})$"
              },
              "Port": {},
              "Host": {
                "type": "string",
                "max": 128,
                "min": 1
              },
              "Path": {
                "type": "string",
                "max": 128,
                "min": 1
              },
              "Query": {
                "type": "string",
                "max": 128,
                "min": 0
              },
              "StatusCode": {
                "type": "string",
                "enum": [
                  "HTTP_301",
                  "HTTP_302"
                ]
              }
            }
          },
          "FixedResponseConfig": {
            "type": "structure",
            "required": [
              "StatusCode"
            ],
            "members": {
              "MessageBody": {
                "type": "string",
                "max": 1024,
                "min": 0
              },
              "StatusCode": {
                "type": "string",
                "pattern": "^(2|4|5)\\d\\d$"
              },
              "ContentType": {
                "type": "string",
                "max": 32,
                "min": 0
              }
            }
          }
        }
      }
    },
    "S1r": {
      "type": "list",
      "member": {
        "type": "structure",
        "members": {
          "ListenerArn": {},
          "LoadBalancerArn": {},
          "Port": {
            "shape": "Sj"
          },
          "Protocol": {
            "shape": "Si"
          },
          "Certificates": {
            "shape": "S3"
          },
          "SslPolicy": {},
          "DefaultActions": {
            "shape": "Sl"
          }
        }
      }
    },
    "S1v": {
      "type": "list",
      "member": {}
    },
    "S1x": {
      "type": "list",
      "member": {
        "type": "structure",
        "members": {
          "SubnetId": {},
          "AllocationId": {}
        }
      }
    },
    "S20": {
      "type": "list",
      "member": {}
    },
    "S22": {
      "type": "string",
      "enum": [
        "internet-facing",
        "internal"
      ]
    },
    "S23": {
      "type": "string",
      "enum": [
        "application",
        "network"
      ]
    },
    "S24": {
      "type": "string",
      "enum": [
        "ipv4",
        "dualstack"
      ]
    },
    "S26": {
      "type": "list",
      "member": {
        "type": "structure",
        "members": {
          "LoadBalancerArn": {},
          "DNSName": {},
          "CanonicalHostedZoneId": {},
          "CreatedTime": {
            "type": "timestamp"
          },
          "LoadBalancerName": {},
          "Scheme": {
            "shape": "S22"
          },
          "VpcId": {},
          "State": {
            "type": "structure",
            "members": {
              "Code": {
                "type": "string",
                "enum": [
                  "active",
                  "provisioning",
                  "active_impaired",
                  "failed"
                ]
              },
              "Reason": {}
            }
          },
          "Type": {
            "shape": "S23"
          },
          "AvailabilityZones": {
            "shape": "S2f"
          },
          "SecurityGroups": {
            "shape": "S20"
          },
          "IpAddressType": {
            "shape": "S24"
          }
        }
      }
    },
    "S2f": {
      "type": "list",
      "member": {
        "type": "structure",
        "members": {
          "ZoneName": {},
          "SubnetId": {},
          "LoadBalancerAddresses": {
            "type": "list",
            "member": {
              "type": "structure",
              "members": {
                "IpAddress": {},
                "AllocationId": {}
              }
            }
          }
        }
      }
    },
    "S2m": {
      "type": "list",
      "member": {
        "type": "structure",
        "members": {
          "Field": {
            "type": "string",
            "max": 64
          },
          "Values": {
            "type": "list",
            "member": {}
          }
        }
      }
    },
    "S2r": {
      "type": "integer",
      "max": 50000,
      "min": 1
    },
    "S2t": {
      "type": "list",
      "member": {
        "type": "structure",
        "members": {
          "RuleArn": {},
          "Priority": {},
          "Conditions": {
            "shape": "S2m"
          },
          "Actions": {
            "shape": "Sl"
          },
          "IsDefault": {
            "type": "boolean"
          }
        }
      }
    },
    "S31": {
      "type": "string",
      "max": 1024,
      "min": 1
    },
    "S32": {
      "type": "integer",
      "max": 300,
      "min": 5
    },
    "S33": {
      "type": "integer",
      "max": 60,
      "min": 2
    },
    "S34": {
      "type": "integer",
      "max": 10,
      "min": 2
    },
    "S35": {
      "type": "structure",
      "required": [
        "HttpCode"
      ],
      "members": {
        "HttpCode": {}
      }
    },
    "S37": {
      "type": "string",
      "enum": [
        "instance",
        "ip"
      ]
    },
    "S39": {
      "type": "list",
      "member": {
        "type": "structure",
        "members": {
          "TargetGroupArn": {},
          "TargetGroupName": {},
          "Protocol": {
            "shape": "Si"
          },
          "Port": {
            "shape": "Sj"
          },
          "VpcId": {},
          "HealthCheckProtocol": {
            "shape": "Si"
          },
          "HealthCheckPort": {},
          "HealthCheckIntervalSeconds": {
            "shape": "S32"
          },
          "HealthCheckTimeoutSeconds": {
            "shape": "S33"
          },
          "HealthyThresholdCount": {
            "shape": "S34"
          },
          "UnhealthyThresholdCount": {
            "shape": "S34"
          },
          "HealthCheckPath": {
            "shape": "S31"
          },
          "Matcher": {
            "shape": "S35"
          },
          "LoadBalancerArns": {
            "shape": "S3b"
          },
          "TargetType": {
            "shape": "S37"
          }
        }
      }
    },
    "S3b": {
      "type": "list",
      "member": {}
    },
    "S3l": {
      "type": "list",
      "member": {
        "shape": "S3m"
      }
    },
    "S3m": {
      "type": "structure",
      "required": [
        "Id"
      ],
      "members": {
        "Id": {},
        "Port": {
          "shape": "Sj"
        },
        "AvailabilityZone": {}
      }
    },
    "S3r": {
      "type": "integer",
      "max": 400,
      "min": 1
    },
    "S44": {
      "type": "list",
      "member": {
        "type": "structure",
        "members": {
          "Key": {
            "type": "string",
            "max": 256,
            "pattern": "^[a-zA-Z0-9._]+$"
          },
          "Value": {
            "type": "string",
            "max": 1024
          }
        }
      },
      "max": 20
    },
    "S4v": {
      "type": "list",
      "member": {
        "type": "structure",
        "members": {
          "Key": {
            "type": "string",
            "max": 256,
            "pattern": "^[a-zA-Z0-9._]+$"
          },
          "Value": {}
        }
      }
    }
  }
}