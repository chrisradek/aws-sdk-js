{
  "version": "2.0",
  "metadata": {
    "apiVersion": "2015-12-08",
    "endpointPrefix": "acm",
    "jsonVersion": "1.1",
    "protocol": "json",
    "serviceAbbreviation": "ACM",
    "serviceFullName": "AWS Certificate Manager",
    "serviceId": "ACM",
    "signatureVersion": "v4",
    "targetPrefix": "CertificateManager",
    "uid": "acm-2015-12-08"
  },
  "operations": {
    "AddTagsToCertificate": {
      "input": {
        "type": "structure",
        "required": [
          "CertificateArn",
          "Tags"
        ],
        "members": {
          "CertificateArn": {
            "shape": "S2"
          },
          "Tags": {
            "shape": "S3"
          }
        }
      }
    },
    "DeleteCertificate": {
      "input": {
        "type": "structure",
        "required": [
          "CertificateArn"
        ],
        "members": {
          "CertificateArn": {
            "shape": "S2"
          }
        }
      }
    },
    "DescribeCertificate": {
      "input": {
        "type": "structure",
        "required": [
          "CertificateArn"
        ],
        "members": {
          "CertificateArn": {
            "shape": "S2"
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "Certificate": {
            "type": "structure",
            "members": {
              "CertificateArn": {
                "shape": "S2"
              },
              "DomainName": {
                "shape": "Sb"
              },
              "SubjectAlternativeNames": {
                "shape": "Sc"
              },
              "DomainValidationOptions": {
                "shape": "Sd"
              },
              "Serial": {},
              "Subject": {},
              "Issuer": {},
              "CreatedAt": {
                "type": "timestamp"
              },
              "IssuedAt": {
                "type": "timestamp"
              },
              "ImportedAt": {
                "type": "timestamp"
              },
              "Status": {
                "shape": "Sm"
              },
              "RevokedAt": {
                "type": "timestamp"
              },
              "RevocationReason": {
                "type": "string",
                "enum": [
                  "UNSPECIFIED",
                  "KEY_COMPROMISE",
                  "CA_COMPROMISE",
                  "AFFILIATION_CHANGED",
                  "SUPERCEDED",
                  "CESSATION_OF_OPERATION",
                  "CERTIFICATE_HOLD",
                  "REMOVE_FROM_CRL",
                  "PRIVILEGE_WITHDRAWN",
                  "A_A_COMPROMISE"
                ]
              },
              "NotBefore": {
                "type": "timestamp"
              },
              "NotAfter": {
                "type": "timestamp"
              },
              "KeyAlgorithm": {
                "shape": "So"
              },
              "SignatureAlgorithm": {},
              "InUseBy": {
                "type": "list",
                "member": {}
              },
              "FailureReason": {
                "type": "string",
                "enum": [
                  "NO_AVAILABLE_CONTACTS",
                  "ADDITIONAL_VERIFICATION_REQUIRED",
                  "DOMAIN_NOT_ALLOWED",
                  "INVALID_PUBLIC_DOMAIN",
                  "CAA_ERROR",
                  "PCA_LIMIT_EXCEEDED",
                  "PCA_INVALID_ARN",
                  "PCA_INVALID_STATE",
                  "PCA_REQUEST_FAILED",
                  "PCA_RESOURCE_NOT_FOUND",
                  "PCA_INVALID_ARGS",
                  "OTHER"
                ]
              },
              "Type": {
                "type": "string",
                "enum": [
                  "IMPORTED",
                  "AMAZON_ISSUED",
                  "PRIVATE"
                ]
              },
              "RenewalSummary": {
                "type": "structure",
                "required": [
                  "RenewalStatus",
                  "DomainValidationOptions"
                ],
                "members": {
                  "RenewalStatus": {
                    "type": "string",
                    "enum": [
                      "PENDING_AUTO_RENEWAL",
                      "PENDING_VALIDATION",
                      "SUCCESS",
                      "FAILED"
                    ]
                  },
                  "DomainValidationOptions": {
                    "shape": "Sd"
                  }
                }
              },
              "KeyUsages": {
                "type": "list",
                "member": {
                  "type": "structure",
                  "members": {
                    "Name": {
                      "shape": "Sw"
                    }
                  }
                }
              },
              "ExtendedKeyUsages": {
                "type": "list",
                "member": {
                  "type": "structure",
                  "members": {
                    "Name": {
                      "shape": "Sz"
                    },
                    "OID": {}
                  }
                }
              },
              "CertificateAuthorityArn": {
                "shape": "S2"
              },
              "RenewalEligibility": {
                "type": "string",
                "enum": [
                  "ELIGIBLE",
                  "INELIGIBLE"
                ]
              },
              "Options": {
                "shape": "S11"
              }
            }
          }
        }
      }
    },
    "ExportCertificate": {
      "input": {
        "type": "structure",
        "required": [
          "CertificateArn",
          "Passphrase"
        ],
        "members": {
          "CertificateArn": {
            "shape": "S2"
          },
          "Passphrase": {
            "type": "blob",
            "max": 128,
            "min": 4,
            "sensitive": true
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "Certificate": {
            "shape": "S16"
          },
          "CertificateChain": {
            "shape": "S17"
          },
          "PrivateKey": {
            "type": "string",
            "max": 524288,
            "min": 1,
            "pattern": "-{5}BEGIN PRIVATE KEY-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END PRIVATE KEY-{5}(\\u000D?\\u000A)?",
            "sensitive": true
          }
        }
      }
    },
    "GetCertificate": {
      "input": {
        "type": "structure",
        "required": [
          "CertificateArn"
        ],
        "members": {
          "CertificateArn": {
            "shape": "S2"
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "Certificate": {
            "shape": "S16"
          },
          "CertificateChain": {
            "shape": "S17"
          }
        }
      }
    },
    "ImportCertificate": {
      "input": {
        "type": "structure",
        "required": [
          "Certificate",
          "PrivateKey"
        ],
        "members": {
          "CertificateArn": {
            "shape": "S2"
          },
          "Certificate": {
            "type": "blob",
            "max": 32768,
            "min": 1
          },
          "PrivateKey": {
            "type": "blob",
            "max": 524288,
            "min": 1,
            "sensitive": true
          },
          "CertificateChain": {
            "type": "blob",
            "max": 2097152,
            "min": 1
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "CertificateArn": {
            "shape": "S2"
          }
        }
      }
    },
    "ListCertificates": {
      "input": {
        "type": "structure",
        "members": {
          "CertificateStatuses": {
            "type": "list",
            "member": {
              "shape": "Sm"
            }
          },
          "Includes": {
            "type": "structure",
            "members": {
              "extendedKeyUsage": {
                "type": "list",
                "member": {
                  "shape": "Sz"
                }
              },
              "keyUsage": {
                "type": "list",
                "member": {
                  "shape": "Sw"
                }
              },
              "keyTypes": {
                "type": "list",
                "member": {
                  "shape": "So"
                }
              }
            }
          },
          "NextToken": {
            "shape": "S1m"
          },
          "MaxItems": {
            "type": "integer",
            "max": 1000,
            "min": 1
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "NextToken": {
            "shape": "S1m"
          },
          "CertificateSummaryList": {
            "type": "list",
            "member": {
              "type": "structure",
              "members": {
                "CertificateArn": {
                  "shape": "S2"
                },
                "DomainName": {
                  "shape": "Sb"
                }
              }
            }
          }
        }
      }
    },
    "ListTagsForCertificate": {
      "input": {
        "type": "structure",
        "required": [
          "CertificateArn"
        ],
        "members": {
          "CertificateArn": {
            "shape": "S2"
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "Tags": {
            "shape": "S3"
          }
        }
      }
    },
    "RemoveTagsFromCertificate": {
      "input": {
        "type": "structure",
        "required": [
          "CertificateArn",
          "Tags"
        ],
        "members": {
          "CertificateArn": {
            "shape": "S2"
          },
          "Tags": {
            "shape": "S3"
          }
        }
      }
    },
    "RequestCertificate": {
      "input": {
        "type": "structure",
        "required": [
          "DomainName"
        ],
        "members": {
          "DomainName": {
            "shape": "Sb"
          },
          "ValidationMethod": {
            "shape": "Sk"
          },
          "SubjectAlternativeNames": {
            "shape": "Sc"
          },
          "IdempotencyToken": {
            "type": "string",
            "max": 32,
            "min": 1,
            "pattern": "\\w+"
          },
          "DomainValidationOptions": {
            "type": "list",
            "member": {
              "type": "structure",
              "required": [
                "DomainName",
                "ValidationDomain"
              ],
              "members": {
                "DomainName": {
                  "shape": "Sb"
                },
                "ValidationDomain": {
                  "shape": "Sb"
                }
              }
            },
            "max": 100,
            "min": 1
          },
          "Options": {
            "shape": "S11"
          },
          "CertificateAuthorityArn": {
            "shape": "S2"
          }
        }
      },
      "output": {
        "type": "structure",
        "members": {
          "CertificateArn": {
            "shape": "S2"
          }
        }
      }
    },
    "ResendValidationEmail": {
      "input": {
        "type": "structure",
        "required": [
          "CertificateArn",
          "Domain",
          "ValidationDomain"
        ],
        "members": {
          "CertificateArn": {
            "shape": "S2"
          },
          "Domain": {
            "shape": "Sb"
          },
          "ValidationDomain": {
            "shape": "Sb"
          }
        }
      }
    },
    "UpdateCertificateOptions": {
      "input": {
        "type": "structure",
        "required": [
          "CertificateArn",
          "Options"
        ],
        "members": {
          "CertificateArn": {
            "shape": "S2"
          },
          "Options": {
            "shape": "S11"
          }
        }
      }
    }
  },
  "shapes": {
    "S2": {
      "type": "string",
      "max": 2048,
      "min": 20,
      "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*"
    },
    "S3": {
      "type": "list",
      "member": {
        "type": "structure",
        "required": [
          "Key"
        ],
        "members": {
          "Key": {
            "type": "string",
            "max": 128,
            "min": 1,
            "pattern": "[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]*"
          },
          "Value": {
            "type": "string",
            "max": 256,
            "min": 0,
            "pattern": "[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]*"
          }
        }
      },
      "max": 50,
      "min": 1
    },
    "Sb": {
      "type": "string",
      "max": 253,
      "min": 1,
      "pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$"
    },
    "Sc": {
      "type": "list",
      "member": {
        "shape": "Sb"
      },
      "max": 100,
      "min": 1
    },
    "Sd": {
      "type": "list",
      "member": {
        "type": "structure",
        "required": [
          "DomainName"
        ],
        "members": {
          "DomainName": {
            "shape": "Sb"
          },
          "ValidationEmails": {
            "type": "list",
            "member": {}
          },
          "ValidationDomain": {
            "shape": "Sb"
          },
          "ValidationStatus": {
            "type": "string",
            "enum": [
              "PENDING_VALIDATION",
              "SUCCESS",
              "FAILED"
            ]
          },
          "ResourceRecord": {
            "type": "structure",
            "required": [
              "Name",
              "Type",
              "Value"
            ],
            "members": {
              "Name": {},
              "Type": {
                "type": "string",
                "enum": [
                  "CNAME"
                ]
              },
              "Value": {}
            }
          },
          "ValidationMethod": {
            "shape": "Sk"
          }
        }
      },
      "max": 1000,
      "min": 1
    },
    "Sk": {
      "type": "string",
      "enum": [
        "EMAIL",
        "DNS"
      ]
    },
    "Sm": {
      "type": "string",
      "enum": [
        "PENDING_VALIDATION",
        "ISSUED",
        "INACTIVE",
        "EXPIRED",
        "VALIDATION_TIMED_OUT",
        "REVOKED",
        "FAILED"
      ]
    },
    "So": {
      "type": "string",
      "enum": [
        "RSA_2048",
        "RSA_1024",
        "RSA_4096",
        "EC_prime256v1",
        "EC_secp384r1",
        "EC_secp521r1"
      ]
    },
    "Sw": {
      "type": "string",
      "enum": [
        "DIGITAL_SIGNATURE",
        "NON_REPUDIATION",
        "KEY_ENCIPHERMENT",
        "DATA_ENCIPHERMENT",
        "KEY_AGREEMENT",
        "CERTIFICATE_SIGNING",
        "CRL_SIGNING",
        "ENCIPHER_ONLY",
        "DECIPHER_ONLY",
        "ANY",
        "CUSTOM"
      ]
    },
    "Sz": {
      "type": "string",
      "enum": [
        "TLS_WEB_SERVER_AUTHENTICATION",
        "TLS_WEB_CLIENT_AUTHENTICATION",
        "CODE_SIGNING",
        "EMAIL_PROTECTION",
        "TIME_STAMPING",
        "OCSP_SIGNING",
        "IPSEC_END_SYSTEM",
        "IPSEC_TUNNEL",
        "IPSEC_USER",
        "ANY",
        "NONE",
        "CUSTOM"
      ]
    },
    "S11": {
      "type": "structure",
      "members": {
        "CertificateTransparencyLoggingPreference": {
          "type": "string",
          "enum": [
            "ENABLED",
            "DISABLED"
          ]
        }
      }
    },
    "S16": {
      "type": "string",
      "max": 32768,
      "min": 1,
      "pattern": "-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?"
    },
    "S17": {
      "type": "string",
      "max": 2097152,
      "min": 1,
      "pattern": "(-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}\\u000D?\\u000A)*-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?"
    },
    "S1m": {
      "type": "string",
      "max": 320,
      "min": 1,
      "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]*"
    }
  }
}